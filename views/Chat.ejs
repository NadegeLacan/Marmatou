<!DOCTYPE html>
<html lang="fr">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" type="text/css" href="chatStyle.css" />
    <title>BlablaTchat Salons</title>
  </head>


  <body>

<!-------------------------------------- MENU -------------------------------------->
    <nav>
        <ul>
            <li>
              <a href="" title="Accueil"><img src="../medias/icons/logoSmall.png" alt="logo de BlablaTchat" id="logo" /></a>
            </li>
            <li>
              <a href="" title="Accueil"><img src="../medias/icons/index.png" alt="Accueil" id="btAccueil" /></a>
            </li>
            <li>
              <a href="" title="Salons"><img src="../medias/icons/blabla.png" alt="Salons" id="btSalons" /></a>
            </li>
            <li>
              <a href="" title="Paramètres"><img src="../medias/icons/wheel.png" alt="Paramètres" id="btParametres" /></a>
            </li>
            <li>
              <a href="" title="Profil"><img src="../medias/icons/userLongHair.png" alt="Profil" id="btProfil" /></a>
            </li>
            <li>
              <a href="" title="Déconnexion" id="deconnexion"><img src="../medias/icons/deconnexion.png" alt="Deconnexion" id="Deconnexion" /></a>
            </li>
        </ul>
    </nav>
<!-------------------------------------- END menu -------------------------------------->


<!-------------------------------------- SALONS -------------------------------------->

    <div class="salonContainer">

      <table>
        <caption>
          <h2>Salons</h2>
        </caption>
        <tr class="salon"></tr>

        <!-- liste des groupes auxquel appartient le user -->
      </table>

      <form class="salonForm">
        <input
          type="text"
          name="salonName"
          id="salonName"
          placeholder="Nom salon"
          required
        />

        <input type="submit" id="creerSalon" />
      </form>
    </div>
<!-------------------------------------- END salons -------------------------------------->


<!-------------------------------------- BLOC MESSAGES -------------------------------------->

    <div id="blocMessages">

<!-------- Tools bar -------->
        <div id="tchatTools">
            <h3>Salon</h3>

        </div>


<!-------- View messages -------->
        <div class="msgListContainer">
          <ul class="listeMsg"></ul>
          <!-- actualiser historique messages en  fonction du groupe choisi -->
        </div>


<!-------- Send message -------->
        <div class="envoiMsg">
          <form class="submitMsg">
            <label for="message">Message</label>
            <input
              type="text"
              name="message"
              id="message"
              placeholder="Message"
              maxlength="300"
              required
            />

            <input type="submit" name="envoiMsg" id="envoiMsg" value="Envoyer" />
          </form>
        </div>
        <script src="/socket.io/socket.io.js"></script>
        <script>
              const sessionId = <%= id %>;
              const socket = io("http://localhost:8080", {query:{id: sessionId}});
              const msgForm = document.querySelector(".submitMsg");
              const msgList = document.querySelector(".listeMsg");
              const msg = document.querySelector("#message");
              const salon = document.querySelector(".salon");
              const buttonSalon = document.querySelector("#creerSalon");
              const salonName = document.querySelector("#salonName");
              let salonId= 1 ;

              // FETCH and construct INITIAL DATA
              fetchData(salonId);

              // button de submit message
              msgForm.addEventListener("submit", (e)=>{
                e.preventDefault();
                socket.emit("newMsg", {msg:msg.value, salonId:salonId} );
                // createMsg(msg.value, sessionId, salon);
                // J'AVAIS UN BUG OU APRES AVOIR CHANGER DE SALON LE LE BRODCAST D'UNE MESSAGE
                // SE FAISAIT A ELE MEME CE QUE FAISAIT CREATEMESSAGE() COURIR 2 FOIS
                // J'AI PAS TROUVE LA RAISON DU COUP CREATEMESSAGE SERAIT EXECUTE JUSTE QUAND ON REÇOIT UNE MESSAGE
                // COTE SERVEUR TOUTES LES MESSAGES SERONT BROADCAST A TOUTES LES SOCKETS DANS LE SALON INCLUS L'EMETEUR
                msg.value="";
              });

              //button de creer salon

              buttonSalon.addEventListener("click", (e)=>{
                e.preventDefault();
                if(salonName.value==="") return; // vu que required dans l'input n'a pas envie de marcher
                socket.emit("createSalon", {name: salonName.value});
                salonName.value="";
              })


              // SOCKETS

              socket.on("msgIncoming", ({msg, senderId, senderPseudo})=> createMsg(msg, senderId, senderPseudo));

              socket.on("newSalon", ({name, id})=> {
                createSalon(name, id);
              });


              // fonctions de creer message/ salon, fetch

              function createSalon(name, id){
                const group= document.createElement("td");
                const buttonGroup= document.createElement("button");
                buttonGroup.innerText= name;

                buttonGroup.addEventListener("click", ()=>{
                  salonId= id;
                  fetchMessages(id);
                  socket.emit("changeSalon", {salonId:id})
                })
                group.append(buttonGroup);
                salon.append(group);
              }

              function createMsg(msg, id, pseudo){
                let li = document.createElement("li");
                if(id != sessionId){
                  li.classList.add("receivedMsg");
                  let span = document.createElement("span");
                  span.innerText= pseudo;
                  span.classList.add("sender");
                  li.append(span);
                }else{
                  li.classList.add("ownMsg" );
                }
                let text = document.createTextNode(msg);

                li.append(text);
                msgList.append(li);
                // msgList.scrollTop = msgList.scrollHeight - msgList.clientHeight;  //ca devrait marcher mais non x) pour scroller auto
                window.scrollTo(0,document.body.scrollHeight); // ca marche avec ca, mais si on met du scroll que dans la msgList va falloir le modifier
              }

              // peut être mettre un

              //html {
              //  scroll-behavior: smooth;
              //}

              // dans le css pour scroller jolie xd

              async function fetchSalons(){
                await fetch("http://localhost:8080/salons", {
                method: "GET",
                headers: {
                Accept: "application/json",
                "Content-Type": "application/json",
              },
            })
              .then((res) => res.json())
              .then((data) => {

                data.forEach(element => {
                  createSalon(element.nom, element.id);
                });
              });
            }


              async function  fetchMessages(salonId){
                msgList.innerHTML= "";
                await fetch("http://localhost:8080/messages", {
                method: "GET",
                headers: {
                Accept: "application/json",
                "Content-Type": "application/json",
                receiver: sessionId,
                salon:salonId
              },
            })
              .then((res) => res.json())
              .then((data) => {

                data.forEach(element=>{
                  createMsg(element.contenu, element.id_user, element.pseudo);
                });
              });
          }

          async function fetchData(salonId){
            fetchMessages(salonId);
            fetchSalons();
          }

    </script>

    </div>  <!-- fin div blocMessages -->
<!-------------------------------------- END bloc messages -------------------------------------->


  </body>
</html>
