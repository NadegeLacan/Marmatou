<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Chat</title>
  </head>
  <body>
    <h2>Chat</h2>
    <!-- <h3><%= id %></h3> -->

    <div class="menu">
      <a href="" title="Créer un compte" id="creerCompte">Créer un compte</a>
      <a href="" title="Connexion" id="connexion">Se connecter</a>
      <a href="" title="Déconnexion" id="deconnexion">Se déconnecter</a>
    </div>

    <div class="salonContainer">
      <table>
        <caption>
          Salons
        </caption>
        <tr class="salon"></tr>

        <!-- liste des groupes auxquel appartient le user -->
      </table>

      <form class="salonForm">
        <input
          type="text"
          name="salonName"
          id="salonName"
          placeholder="Nom salon"
          required
        />
        <input type="submit" id="creerSalon" />
      </form>
    </div>

    <div class="msgListContainer">
      <ul class="listeMsg"></ul>
      <!-- actualiser historique messages en  fonction du groupe choisi -->
    </div>

    <div class="envoiMsg">
      <form class="submitMsg">
        <label for="message">Message</label>
        <input
          type="text"
          name="message"
          id="message"
          placeholder="message"
          maxlength="300"
          required
        />

        <input type="submit" name="envoiMsg" id="envoiMsg" value="Envoyer" />
      </form>
    </div>
    <script src="/socket.io/socket.io.js"></script>
    <script>
          const sessionId = <%= id %>;
          const socket = io("http://localhost:8080", {query:{id: sessionId}});
          const msgForm = document.querySelector(".submitMsg");
          const msgList = document.querySelector(".listeMsg");
          const msg = document.querySelector("#message");
          const salon = document.querySelector(".salon");
          const buttonSalon = document.querySelector("#creerSalon");
          const salonName = document.querySelector("#salonName");
          let salonId= 1 ;

          async function fetchSalons(){
            await fetch("http://localhost:8080/salons", {
            method: "GET",
            headers: {
            Accept: "application/json",
            "Content-Type": "application/json",
          },
        })
          .then((res) => res.json())
          .then((data) => {
            console.log("salons :", data);
            data.forEach(element => {
              createSalon(element.nom, element.id);
            });
          });
        }


          async function  fetchMessages(salonId){

            msgList.innerHTML= "";
            await fetch("http://localhost:8080/messages", {
            method: "GET",
            headers: {
            Accept: "application/json",
            "Content-Type": "application/json",
            receiver: sessionId,
            salon:salonId
          },
        })
          .then((res) => res.json())
          .then((data) => {
            data.forEach(element=>{
              createMsg(element.contenu, element.id_user);
            });
          });
      }

        fetchMessages(salonId);
        fetchSalons();

          msgForm.addEventListener("submit", (e)=>{
            e.preventDefault();
            console.log("sent");
            console.log(msg.value);
            socket.emit("newMsg", {msg:msg.value, sender: sessionId, salonId:salonId} );
            // createMsg(msg.value, sessionId, salon);
            msg.value="";
          });

          buttonSalon.addEventListener("click", (e)=>{
            e.preventDefault();
            socket.emit("createSalon", {name: salonName.value});
            salonName.value="";
          })


            // SOCKETS

          socket.on("msgIncoming", (data)=>{
            console.log("je devrais pas courrir")
            createMsg(data.msg, data.id, data.senderPseudo);

          });

          socket.on("newGroup", (data)=>{
            console.log(data);

            createSalon(data.name, data.id);
          })


          function createSalon(name, id){
            const group= document.createElement("td");
            const buttonGroup= document.createElement("button");
            buttonGroup.innerText= name;

            buttonGroup.addEventListener("click", ()=>{

              salonId= id;
              fetchMessages(salonId);
              socket.emit("changeSalon", {salonId:salonId})
            })
            group.append(buttonGroup);
            salon.append(group);
          }

          function createMsg(msg, id){
            let li = document.createElement("li");
            li.classList.add(id == sessionId ? "ownMsg" : "receivedMsg");
            li.innerText = msg;
            msgList.append(li);
            msgList.scrollTop = msgList.scrollHeight - msgList.clientHeight;
          }
    </script>
  </body>
</html>
